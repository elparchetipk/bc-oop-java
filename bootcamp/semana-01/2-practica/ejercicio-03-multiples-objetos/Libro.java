/**
 * Clase Libro - Gesti√≥n de biblioteca
 * 
 * Esta clase representa un libro con sus caracter√≠sticas y permite
 * gestionar su disponibilidad para pr√©stamo.
 * 
 * @author SENA - Bootcamp POO Java
 * @version 1.0
 */
public class Libro {
  // ===== ATRIBUTOS =====
  String titulo;
  String autor;
  String isbn;
  int numeroPaginas;
  int anioPublicacion;
  String editorial;
  boolean disponible;
  String prestadoA; // Nombre de quien tiene el libro

  // ===== M√âTODOS =====

  /**
   * Muestra la informaci√≥n completa del libro
   */
  public void mostrarInformacion() {
    System.out.println("\n‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó");
    System.out.println("‚ïë           INFORMACI√ìN DEL LIBRO               ‚ïë");
    System.out.println("‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£");
    System.out.println("‚ïë T√≠tulo:       " + titulo);
    System.out.println("‚ïë Autor:        " + autor);
    System.out.println("‚ïë ISBN:         " + isbn);
    System.out.println("‚ïë P√°ginas:      " + numeroPaginas);
    System.out.println("‚ïë A√±o:          " + anioPublicacion);
    System.out.println("‚ïë Editorial:    " + editorial);
    System.out.println("‚ïë Estado:       " + (disponible ? "‚úì Disponible" : "‚úó Prestado"));
    if (!disponible && prestadoA != null) {
      System.out.println("‚ïë Prestado a:   " + prestadoA);
    }
    System.out.println("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù");
  }

  /**
   * Muestra informaci√≥n resumida del libro en una l√≠nea
   */
  public void mostrarResumen() {
    String estado = disponible ? "[DISPONIBLE]" : "[PRESTADO]";
    System.out.println(estado + " \"" + titulo + "\" - " + autor + " (" + anioPublicacion + ")");
  }

  /**
   * Presta el libro a una persona
   * 
   * @param nombrePersona nombre de quien solicita el libro
   * @return true si se prest√≥ exitosamente, false si no estaba disponible
   */
  public boolean prestar(String nombrePersona) {
    if (disponible) {
      disponible = false;
      prestadoA = nombrePersona;
      System.out.println("üìö Libro prestado a " + nombrePersona);
      System.out.println("   \"" + titulo + "\" - " + autor);
      return true;
    } else {
      System.out.println("‚ùå El libro no est√° disponible.");
      System.out.println("   Actualmente prestado a: " + prestadoA);
      return false;
    }
  }

  /**
   * Devuelve el libro a la biblioteca
   * 
   * @return true si se devolvi√≥ exitosamente, false si no estaba prestado
   */
  public boolean devolver() {
    if (!disponible) {
      System.out.println("üì• Libro devuelto por " + prestadoA);
      System.out.println("   \"" + titulo + "\" ahora est√° disponible.");
      disponible = true;
      prestadoA = null;
      return true;
    } else {
      System.out.println("‚ö†Ô∏è  El libro no estaba prestado.");
      return false;
    }
  }

  /**
   * Verifica si el libro es voluminoso (m√°s de 500 p√°ginas)
   * 
   * @return true si tiene m√°s de 500 p√°ginas, false en caso contrario
   */
  public boolean esVoluminoso() {
    return numeroPaginas > 500;
  }

  /**
   * Verifica si el libro es antiguo (m√°s de 50 a√±os)
   * 
   * @return true si tiene m√°s de 50 a√±os, false en caso contrario
   */
  public boolean esAntiguo() {
    int anioActual = 2025;
    return (anioActual - anioPublicacion) > 50;
  }

  /**
   * Calcula cu√°ntos a√±os tiene el libro
   * 
   * @return edad del libro en a√±os
   */
  public int calcularEdad() {
    int anioActual = 2025;
    return anioActual - anioPublicacion;
  }

  /**
   * Compara si este libro tiene m√°s p√°ginas que otro
   * 
   * @param otroLibro libro con el que se comparar√°
   * @return true si este libro tiene m√°s p√°ginas, false en caso contrario
   */
  public boolean tieneMasPaginasQue(Libro otroLibro) {
    return this.numeroPaginas > otroLibro.numeroPaginas;
  }

  /**
   * Verifica si este libro es del mismo autor que otro
   * 
   * @param otroLibro libro con el que se comparar√° el autor
   * @return true si tienen el mismo autor, false en caso contrario
   */
  public boolean esMismoAutorQue(Libro otroLibro) {
    return this.autor.equalsIgnoreCase(otroLibro.autor);
  }
}
