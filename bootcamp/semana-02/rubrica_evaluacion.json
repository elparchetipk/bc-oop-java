{
  "semana": "02",
  "titulo": "Fundamentos de Clases y Objetos",
  "descripcion": "Conceptos de clase, objeto, atributos, métodos, instanciación y modelado del mundo real",
  "nota_minima_aprobatoria": 3.0,
  "escala": 5.0,
  "distribucion_evaluacion": {
    "conocimiento": {"peso": 30, "descripcion": "Cuestionarios, exámenes, preguntas escritas"},
    "desempeno": {"peso": 40, "descripcion": "Ejercicios en clase, talleres prácticos"},
    "producto": {"peso": 30, "descripcion": "Entregables de código y documentación"}
  },
  "evidencias": {
    "conocimiento": [
      {
        "id": "C1",
        "nombre": "Cuestionario: Conceptos de Clase y Objeto",
        "peso": 15,
        "tipo": "cuestionario",
        "instrumento": "Cuestionario escrito de 10 preguntas",
        "temas": ["Definición de clase", "Definición de objeto", "Diferencia clase-objeto", "Instanciación"],
        "validacion_automatica": {
          "archivo_esperado": "cuestionario_semana02_*.md",
          "palabras_clave": ["clase", "objeto", "instancia", "atributo", "método", "new"],
          "minimo_palabras": 200
        }
      },
      {
        "id": "C2",
        "nombre": "Evaluación: Encapsulación y Modificadores",
        "peso": 15,
        "tipo": "evaluacion_escrita",
        "temas": ["Modificadores de acceso", "Encapsulación", "Aplicación práctica"],
        "validacion_automatica": {
          "archivo_esperado": "evaluacion_encapsulacion_*.md",
          "palabras_clave": ["public", "private", "protected", "encapsulación", "getter", "setter"],
          "minimo_palabras": 150
        }
      }
    ],
    "desempeno": [
      {
        "id": "D1",
        "nombre": "Ejercicio en Clase: Creación de Clases Básicas",
        "peso": 15,
        "tipo": "ejercicio_clase",
        "actividad": "Crear clase CuentaBancaria con atributos y métodos",
        "tiempo_minutos": 30,
        "validacion_automatica": {
          "archivos_requeridos": ["CuentaBancaria.java"],
          "debe_compilar": true,
          "clases_esperadas": ["CuentaBancaria"],
          "minimo_atributos": 3,
          "metodos_esperados": ["depositar", "retirar", "consultarSaldo"],
          "convenciones_codigo": true
        }
      },
      {
        "id": "D2",
        "nombre": "Taller Práctico: Instanciación de Objetos",
        "peso": 15,
        "tipo": "taller_practico",
        "actividad": "Crear 3 objetos Estudiante con valores diferentes",
        "tiempo_minutos": 25,
        "validacion_automatica": {
          "archivos_requeridos": ["Estudiante.java", "Main.java"],
          "debe_compilar": true,
          "debe_ejecutar": true,
          "patron_instanciacion": "new\\s+Estudiante\\s*\\(",
          "minimo_instancias": 3
        }
      },
      {
        "id": "D3",
        "nombre": "Ejercicio: Aplicación de Encapsulación",
        "peso": 10,
        "tipo": "ejercicio_practico",
        "actividad": "Refactorizar clase para aplicar encapsulación completa",
        "tiempo_minutos": 20,
        "validacion_automatica": {
          "archivos_requeridos": ["*.java"],
          "debe_compilar": true,
          "patron_atributo_privado": "private\\s+\\w+\\s+\\w+;",
          "patron_getter": "(public\\s+)?\\w+\\s+get[A-Z]\\w+\\s*\\(\\)",
          "patron_setter": "(public\\s+)?void\\s+set[A-Z]\\w+\\s*\\([^)]+\\)",
          "minimo_getters": 3,
          "minimo_setters": 3
        }
      }
    ],
    "producto": [
      {
        "id": "P1",
        "nombre": "Proyecto: Sistema de Gestión Simple",
        "peso": 20,
        "tipo": "proyecto",
        "descripcion": "Crear sistema con 2 clases relacionadas con operaciones CRUD",
        "opciones": [
          "Sistema de Biblioteca (Biblioteca, Libro)",
          "Sistema de Tienda (Tienda, Producto)",
          "Sistema de Vehículos (Garaje, Vehiculo)",
          "Sistema de Estudiantes (Curso, Estudiante)"
        ],
        "requerimientos": [
          "Mínimo 2 clases relacionadas",
          "Implementar operaciones CRUD básicas",
          "Clase main con menú y pruebas",
          "Código comentado y documentado",
          "Aplicar encapsulación completa"
        ],
        "validacion_automatica": {
          "archivos_requeridos": ["*.java", "Main.java", "README.md"],
          "debe_compilar": true,
          "debe_ejecutar": true,
          "minimo_clases": 2,
          "minimo_metodos_por_clase": 4,
          "patron_encapsulacion": "private\\s+\\w+\\s+\\w+;",
          "patron_menu": "switch|Scanner",
          "minimo_lineas_codigo": 150
        }
      },
      {
        "id": "P2",
        "nombre": "Documentación del Código",
        "peso": 10,
        "tipo": "documentacion",
        "requerimientos": [
          "Comentarios Javadoc en clases y métodos",
          "Comentarios explicativos en código complejo",
          "Archivo README.md explicando el proyecto"
        ],
        "validacion_automatica": {
          "archivo_readme": "README.md",
          "patron_javadoc": "/\\*\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/",
          "minimo_javadoc": 5,
          "minimo_comentarios": 10,
          "readme_secciones_requeridas": ["Descripción", "Uso", "Ejemplos"]
        }
      }
    ]
  },
  "formato_entrega": {
    "estructura_carpetas": [
      "semana-02-entrega/",
      "├── README.md",
      "├── src/",
      "│   ├── Clase1.java",
      "│   ├── Clase2.java",
      "│   └── Main.java",
      "└── documentacion/ (opcional)"
    ],
    "metodo": "Repositorio GitHub (proyecto estructurado y funcional)",
    "nomenclatura": "apellido-nombre-semana02",
    "requisitos": {
      "no_permitido": ["Archivos .zip", "Archivos .rar", "Archivos sueltos sin estructura"],
      "obligatorio": ["Repositorio GitHub", "Proyecto estructurado", "Código compilable", "README.md con instrucciones"]
    }
  },
  "niveles_logro": {
    "excelente": {"rango": [4.6, 5.0], "descripcion": "Dominio completo de conceptos y aplicación impecable"},
    "bueno": {"rango": [4.0, 4.5], "descripcion": "Buen entendimiento con aplicación correcta"},
    "aceptable": {"rango": [3.5, 3.9], "descripcion": "Comprensión adecuada con implementación funcional"},
    "suficiente": {"rango": [3.0, 3.4], "descripcion": "Comprensión básica y código funcional mínimo"},
    "insuficiente": {"rango": [0, 2.9], "descripcion": "No alcanza los objetivos mínimos"}
  },
  "aspectos_importantes": [
    "Originalidad: El código debe ser propio. Trabajos copiados = 0.0",
    "Compilación: Código debe compilar sin errores. No compila = máximo 2.0",
    "Funcionalidad: Debe ejecutar las funciones requeridas",
    "Puntualidad: Entregas tardías penalizan 10% por día",
    "Formato: Seguir convenciones de código Java"
  ],
  "configuracion_script_automatizacion": {
    "lenguaje": "python",
    "api": "claude",
    "validaciones": {
      "compilacion": true,
      "ejecucion": true,
      "cobertura_minima": 70,
      "estilo_codigo": true
    },
    "prompts_claude": {
      "evaluar_encapsulacion": "Analiza si el código aplica correctamente encapsulación: atributos privados, getters/setters apropiados, validación de datos.",
      "evaluar_modelado": "Evalúa si las clases modelan apropiadamente el dominio. Verifica coherencia de atributos y métodos con el contexto del negocio.",
      "evaluar_documentacion": "Revisa calidad de comentarios Javadoc, comentarios explicativos y README. Proporciona puntuación según rúbrica."
    }
  }
}
