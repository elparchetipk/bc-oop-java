{
  "semana": "03",
  "titulo": "Principios de Encapsulación y Constructores",
  "descripcion": "Modificadores de acceso, métodos get/set, constructores, sobrecarga de constructores y buenas prácticas",
  "nota_minima_aprobatoria": 3.0,
  "escala": 5.0,
  "distribucion_evaluacion": {
    "conocimiento": {"peso": 30, "descripcion": "Preguntas escritas, cuestionario"},
    "desempeno": {"peso": 40, "descripcion": "Implementación de clases, ejercicios prácticos"},
    "producto": {"peso": 30, "descripcion": "Proyecto con clase completamente encapsulada"}
  },
  "evidencias": {
    "conocimiento": [
      {
        "id": "C1",
        "nombre": "Preguntas Escritas sobre Modificadores de Acceso",
        "peso": 15,
        "tipo": "evaluacion_escrita",
        "preguntas_tipo": [
          "Explique qué es la encapsulación y por qué es importante en POO",
          "Compare los modificadores de acceso: public, private, protected y default",
          "¿Cuándo debe usar getters/setters y cuándo no?",
          "Explique la diferencia entre un constructor y un método normal",
          "¿Qué es la sobrecarga de constructores y cuál es su ventaja?"
        ],
        "criterios": [
          "Comprensión de encapsulación",
          "Modificadores de acceso",
          "Getters/Setters",
          "Constructores"
        ],
        "validacion_automatica": {
          "archivo_esperado": "preguntas_modificadores_*.md",
          "minimo_palabras": 400,
          "palabras_clave": ["encapsulación", "public", "private", "protected", "getter", "setter", "constructor", "sobrecarga"],
          "minimo_preguntas_respondidas": 5
        }
      },
      {
        "id": "C2",
        "nombre": "Cuestionario sobre Buenas Prácticas",
        "peso": 15,
        "tipo": "cuestionario",
        "cantidad_preguntas": 10,
        "formato": "opción múltiple",
        "temas": [
          "Visibilidad apropiada para atributos",
          "Nomenclatura de getters/setters",
          "Validación de datos",
          "Uso de this y this()",
          "Buenas prácticas de encapsulación"
        ],
        "validacion_automatica": {
          "archivo_esperado": "cuestionario_buenas_practicas_*.md",
          "minimo_respuestas": 10,
          "palabras_clave": ["this", "validación", "nomenclatura", "convención"],
          "porcentaje_aprobacion": 60
        }
      }
    ],
    "desempeno": [
      {
        "id": "D1",
        "nombre": "Ejercicio: Implementar Getters y Setters",
        "peso": 15,
        "tipo": "ejercicio_practico",
        "clase_asignada": "Producto",
        "requerimientos": [
          "Atributos privados: código, nombre, precio, stock (mínimo 4)",
          "Getters para todos los atributos",
          "Setters con validación apropiada",
          "Programa de prueba que demuestre validación"
        ],
        "validacion_automatica": {
          "archivos_requeridos": ["Producto.java", "PruebaProducto.java"],
          "debe_compilar": true,
          "debe_ejecutar": true,
          "minimo_atributos_privados": 4,
          "patron_getter": "public\\s+\\w+\\s+get[A-Z]\\w+\\s*\\(\\)\\s*\\{\\s*return\\s+\\w+;",
          "patron_setter": "public\\s+void\\s+set[A-Z]\\w+\\s*\\([^)]+\\)\\s*\\{",
          "minimo_getters": 4,
          "minimo_setters": 4,
          "validacion_en_setters": true,
          "patron_validacion": "if\\s*\\(|throw\\s+new"
        }
      },
      {
        "id": "D2",
        "nombre": "Ejercicio: Constructores Sobrecargados",
        "peso": 15,
        "tipo": "ejercicio_practico",
        "clase_asignada": "Rectangulo o Empleado",
        "requerimientos": [
          "Constructor sin parámetros",
          "Constructor con parámetros parciales",
          "Constructor con todos los parámetros",
          "Uso de this() para llamar entre constructores",
          "Validación en constructores"
        ],
        "validacion_automatica": {
          "archivos_requeridos": ["*.java"],
          "debe_compilar": true,
          "debe_ejecutar": true,
          "minimo_constructores": 3,
          "patron_constructor": "public\\s+\\w+\\s*\\([^)]*\\)\\s*\\{",
          "patron_this_call": "this\\s*\\(",
          "uso_this_llamada": true,
          "validacion_parametros": true
        }
      },
      {
        "id": "D3",
        "nombre": "Taller: Refactorización con Encapsulación",
        "peso": 10,
        "tipo": "taller_practico",
        "descripcion": "Refactorizar código existente para aplicar encapsulación completa",
        "validacion_automatica": {
          "archivos_requeridos": ["*.java"],
          "debe_compilar": true,
          "todos_atributos_privados": true,
          "patron_atributo_publico": "public\\s+(?!static\\s+final)\\s*\\w+\\s+\\w+;",
          "debe_tener_cero_atributos_publicos": true,
          "getters_setters_completos": true
        }
      }
    ],
    "producto": [
      {
        "id": "P1",
        "nombre": "Proyecto: Clase Completamente Encapsulada",
        "peso": 20,
        "tipo": "proyecto",
        "descripcion": "Desarrollar clase del dominio personal con encapsulación perfecta",
        "requerimientos": [
          "Todos los atributos privados (mínimo 5)",
          "Constructores sobrecargados (mínimo 3)",
          "Getters y setters para todos los atributos",
          "Validación de datos en setters y constructores",
          "Uso de this y this() apropiadamente",
          "Programa de prueba exhaustivo",
          "Documentación Javadoc completa"
        ],
        "validacion_automatica": {
          "archivos_requeridos": ["*.java", "Demo.java", "README.md"],
          "debe_compilar": true,
          "debe_ejecutar": true,
          "minimo_atributos": 5,
          "todos_privados": true,
          "minimo_constructores": 3,
          "minimo_getters": 5,
          "minimo_setters": 5,
          "patron_javadoc": "/\\*\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*/",
          "minimo_javadoc": 10,
          "validacion_datos": true,
          "uso_this": true,
          "uso_this_call": true,
          "minimo_lineas_codigo": 200
        }
      },
      {
        "id": "P2",
        "nombre": "Documento: Explicación de Decisiones de Diseño",
        "peso": 10,
        "tipo": "documento",
        "descripcion": "Documento explicando decisiones sobre modificadores, validaciones y constructores",
        "requerimientos": [
          "Justificar visibilidad de cada atributo",
          "Explicar validaciones implementadas",
          "Justificar tipos de constructores creados",
          "Explicar uso de this()"
        ],
        "validacion_automatica": {
          "archivo_esperado": "decisiones_diseno_*.md",
          "minimo_palabras": 500,
          "secciones_requeridas": ["Atributos y Visibilidad", "Validaciones", "Constructores", "Conclusiones"],
          "palabras_clave": ["privado", "validación", "constructor", "this", "encapsulación"],
          "minimo_ejemplos_codigo": 3
        }
      }
    ]
  },
  "buenas_practicas_evaluadas": [
    "Todos los atributos son private",
    "Getters retornan valores sin modificar estado",
    "Setters validan antes de asignar",
    "Nombres de getters/setters siguen convención JavaBeans",
    "Constructores usan this() para evitar duplicación",
    "Uso de this para referenciar atributos de instancia",
    "Constructores validan parámetros",
    "Código documentado con Javadoc",
    "Manejo apropiado de valores null",
    "Validación de rangos numéricos"
  ],
  "aspectos_criticos": [
    "Atributos públicos = penalización del 50%",
    "Sin getters/setters = penalización del 40%",
    "Sin validaciones = penalización del 30%",
    "Código no compila = máximo 2.0",
    "Copia detectada = 0.0"
  ],
  "configuracion_script_automatizacion": {
    "lenguaje": "python",
    "api": "claude",
    "validaciones_especiales": {
      "detectar_atributos_publicos": true,
      "verificar_convenciones_getters_setters": true,
      "analizar_validaciones": true,
      "verificar_sobrecarga_constructores": true,
      "analizar_uso_this": true
    },
    "prompts_claude": {
      "evaluar_encapsulacion": "Analiza el código Java y verifica: 1) Todos los atributos son private, 2) Getters/setters apropiados, 3) Validaciones en setters, 4) Uso correcto de this. Asigna puntuación según rúbrica.",
      "evaluar_constructores": "Evalúa la implementación de constructores: 1) Sobrecarga apropiada, 2) Uso de this() para evitar duplicación, 3) Validación de parámetros, 4) Inicialización correcta. Proporciona puntuación.",
      "evaluar_documentacion": "Revisa la documentación Javadoc y el documento de diseño. Evalúa claridad, completitud y justificación de decisiones técnicas.",
      "evaluar_validaciones": "Analiza las validaciones implementadas en setters y constructores. Verifica que sean apropiadas al dominio y manejen casos edge correctamente."
    },
    "analisis_estatico": {
      "herramienta": "checkstyle",
      "reglas": ["VisibilityModifier", "JavadocMethod", "JavadocType", "ParameterNumber"],
      "umbral_warnings": 5
    }
  }
}
