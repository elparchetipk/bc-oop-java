<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 900 750">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 24px; font-weight: bold; fill: #e0e0e0; }
      .subtitle { font-family: Arial, sans-serif; font-size: 16px; font-weight: bold; fill: #b0b0b0; }
      .text { font-family: Arial, sans-serif; font-size: 14px; fill: #e0e0e0; }
      .small-text { font-family: Arial, sans-serif; font-size: 12px; fill: #9e9e9e; }
      .code { font-family: 'Courier New', monospace; font-size: 12px; fill: #e0e0e0; }
      .bg-dark { fill: #121212; }
      .box-constructor1 { fill: #1e3a8a; stroke: #3b82f6; stroke-width: 2; }
      .box-constructor2 { fill: #047857; stroke: #10b981; stroke-width: 2; }
      .box-constructor3 { fill: #6d28d9; stroke: #a78bfa; stroke-width: 2; }
      .box-clase { fill: #1e293b; stroke: #475569; stroke-width: 2; }
      .arrow-call { fill: none; stroke: #f59e0b; stroke-width: 2; stroke-dasharray: 4,4; }
    </style>
    <marker id="arrow-this" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <polygon points="0 0, 10 3, 0 6" fill="#f59e0b"/>
    </marker>
  </defs>

  <!-- Fondo oscuro -->
  <rect width="900" height="750" class="bg-dark"/>

  <!-- Título -->
  <text x="450" y="40" text-anchor="middle" class="title">Sobrecarga de Constructores</text>
  <text x="450" y="65" text-anchor="middle" class="small-text">Múltiples formas de crear un objeto de la misma clase
  </text>

  <!-- CONCEPTO -->
  <g id="concepto">
    <rect x="100" y="90" width="700" height="70" rx="8" fill="#6d28d9" stroke="#a78bfa" stroke-width="2"/>
    <text x="450" y="115" text-anchor="middle" class="subtitle" style="fill: #e0e0e0;">¿Qué es la Sobrecarga de
      Constructores?
    </text>
    <text x="120" y="140" class="text">Tener múltiples constructores con diferentes parámetros en la misma clase.</text>
    <text x="120" y="158" class="small-text">Permite crear objetos de diferentes formas según las necesidades.</text>
  </g>

  <!-- EJEMPLO VISUAL: CLASE CON 3 CONSTRUCTORES -->
  <g id="clase-ejemplo">
    <text x="450" y="190" text-anchor="middle" class="subtitle">Ejemplo: Clase Producto</text>

    <rect x="50" y="205" width="800" height="350" rx="8" class="box-clase"/>

    <text x="70" y="230" class="code">public class Producto {</text>
    <text x="90" y="250" class="code">private String nombre;</text>
    <text x="90" y="268" class="code">private double precio;</text>
    <text x="90" y="286" class="code">private String categoria;</text>

    <!-- Constructor 1: Sin parámetros -->
    <rect x="70" y="300" width="740" height="70" rx="5" class="box-constructor1"/>
    <text x="90" y="322" class="code" style="fill: #3b82f6; font-weight: bold;">// Constructor 1: Sin parámetros</text>
    <text x="90" y="340" class="code">public Producto() {</text>
    <text x="110" y="358" class="code">this.nombre = "Sin nombre";</text>
    <text x="400" y="340" class="code">this.precio = 0.0;</text>
    <text x="400" y="358" class="code">this.categoria = "General";</text>
    <text x="90" y="370" class="code">}</text>

    <!-- Constructor 2: Solo nombre -->
    <rect x="70" y="380" width="740" height="70" rx="5" class="box-constructor2"/>
    <text x="90" y="402" class="code" style="fill: #10b981; font-weight: bold;">// Constructor 2: Solo nombre</text>
    <text x="90" y="420" class="code">public Producto(String nombre) {</text>
    <text x="110" y="438" class="code">this.nombre = nombre;</text>
    <text x="400" y="420" class="code">this.precio = 0.0;</text>
    <text x="400" y="438" class="code">this.categoria = "General";</text>
    <text x="90" y="450" class="code">}</text>

    <!-- Constructor 3: Todos los parámetros -->
    <rect x="70" y="460" width="740" height="80" rx="5" class="box-constructor3"/>
    <text x="90" y="482" class="code" style="fill: #a78bfa; font-weight: bold;">// Constructor 3: Todos los parámetros
    </text>
    <text x="90" y="500" class="code">public Producto(String nombre, double precio, String categoria) {</text>
    <text x="110" y="518" class="code">this.nombre = nombre;</text>
    <text x="400" y="518" class="code">this.precio = precio;</text>
    <text x="650" y="518" class="code">this.categoria = categoria;</text>
    <text x="90" y="536" class="code">}</text>

    <text x="70" y="555" class="code">}</text>
  </g>

  <!-- USOS DE LOS CONSTRUCTORES -->
  <g id="usos">
    <text x="450" y="585" text-anchor="middle" class="subtitle">Formas de Crear Objetos</text>

    <rect x="100" y="600" width="700" height="85" rx="8" fill="#0f172a" stroke="#334155" stroke-width="2"/>

    <text x="120" y="625" class="code" style="fill: #3b82f6;">Producto p1 = new Producto();</text>
    <text x="500" y="625" class="small-text" style="fill: #9e9e9e;">// Usa constructor 1</text>

    <text x="120" y="645" class="code" style="fill: #10b981;">Producto p2 = new Producto("Laptop");</text>
    <text x="500" y="645" class="small-text" style="fill: #9e9e9e;">// Usa constructor 2</text>

    <text x="120" y="665" class="code" style="fill: #a78bfa;">Producto p3 = new Producto("Mouse", 25.99,
      "Electrónica");
    </text>
    <text x="500" y="665" class="small-text" style="fill: #9e9e9e;">// Usa constructor 3</text>
  </g>

  <!-- LLAMADA ENTRE CONSTRUCTORES CON this() -->
  <g id="this-constructor">
    <text x="450" y="715" text-anchor="middle" class="subtitle">Optimización: Llamada entre Constructores con this()
    </text>

    <rect x="100" y="730" width="700" height="110" rx="8" fill="#0f172a" stroke="#f59e0b" stroke-width="2"/>

    <text x="120" y="755" class="code">public class Producto {</text>
    <text x="140" y="775" class="code" style="fill: #3b82f6;">public Producto() {</text>
    <text x="160" y="793" class="code" style="fill: #f59e0b; font-weight: bold;">this("Sin nombre", 0.0, "General");
    </text>
    <text x="500" y="793" class="small-text" style="fill: #9e9e9e;">// Llama al constructor completo</text>
    <text x="140" y="808" class="code">}</text>

    <text x="140" y="828" class="code" style="fill: #a78bfa;">public Producto(String n, double p, String c) { ... }
    </text>

    <!-- Flecha mostrando la llamada -->
    <path d="M 350 793 Q 350 820, 300 828" class="arrow-call" marker-end="url(#arrow-this)"/>
  </g>

  <!-- VENTAJAS -->
  <g id="ventajas">
    <rect x="50" y="850" width="380" height="15" fill="#047857"/>
    <text x="240" y="862" text-anchor="middle" class="small-text" fill="white" font-weight="bold">
      ✓ Flexibilidad al crear objetos
    </text>

    <rect x="470" y="850" width="380" height="15" fill="#1e3a8a"/>
    <text x="660" y="862" text-anchor="middle" class="small-text" fill="white" font-weight="bold">
      ✓ Código más limpio y reutilizable
    </text>
  </g>
</svg>
