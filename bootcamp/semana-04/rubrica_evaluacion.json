{
  "semana": 4,
  "titulo": "Herencia",
  "nota_minima_aprobatoria": 3.0,
  "distribucion": {
    "conocimiento": {
      "peso": 30,
      "instrumentos": ["Cuestionario", "Preguntas conceptuales"]
    },
    "desempeño": {
      "peso": 40,
      "instrumentos": ["Taller práctico jerarquía animales", "Implementación jerarquía vehículos"]
    },
    "producto": {
      "peso": 30,
      "instrumentos": ["Proyecto integrador sistema empleados"]
    }
  },
  "evidencias": {
    "conocimiento": [
      {
        "id": "C1",
        "nombre": "Cuestionario sobre Herencia, Extends y Super",
        "peso": 20,
        "tipo": "cuestionario",
        "num_preguntas": 15,
        "temas": [
          "Concepto de herencia en POO",
          "Relación is-a",
          "Sintaxis de extends",
          "Uso de super() en constructores",
          "Diferencia entre this y super",
          "Jerarquías de clases",
          "Qué se hereda y qué no",
          "Modificadores de acceso en herencia",
          "Clase Object como raíz",
          "Ventajas y desventajas de herencia"
        ],
        "criterios": {
          "excelente": {
            "rango": [4.5, 5.0],
            "respuestas_correctas": [14, 15],
            "porcentaje": [93, 100]
          },
          "bueno": {
            "rango": [4.0, 4.4],
            "respuestas_correctas": [12, 13],
            "porcentaje": [80, 86]
          },
          "suficiente": {
            "rango": [3.0, 3.9],
            "respuestas_correctas": [10, 11],
            "porcentaje": [67, 73]
          },
          "insuficiente": {
            "rango": [0, 2.9],
            "respuestas_correctas": [0, 9],
            "porcentaje": [0, 66]
          }
        }
      },
      {
        "id": "C2",
        "nombre": "Preguntas Conceptuales Escritas",
        "peso": 10,
        "tipo": "desarrollo_corto",
        "num_preguntas": 5,
        "preguntas": [
          "Explique con sus propias palabras qué es la herencia y para qué sirve",
          "¿Cuál es la diferencia entre super() y super.metodo()?",
          "Dibuje un diagrama de jerarquía con 3 niveles y explique las relaciones",
          "¿Por qué los atributos privados no son accesibles en las subclases?",
          "Dé un ejemplo del mundo real de una relación is-a y modélela con herencia"
        ],
        "criterios": {
          "claridad_conceptual": 25,
          "ejemplos_y_diagramas": 25,
          "profundidad": 25,
          "vocabulario_tecnico": 25
        }
      }
    ],
    "desempeño": [
      {
        "id": "D1",
        "nombre": "Taller Práctico - Jerarquía Animal → Perro, Gato",
        "peso": 20,
        "tipo": "ejercicio_codificacion",
        "duracion_minutos": 45,
        "requisitos_tecnicos": [
          "Clase Animal con constructor y métodos básicos",
          "Clases Perro y Gato que extiendan Animal",
          "Uso de super() en constructores de las subclases",
          "Atributos adicionales en subclases",
          "Método hacerSonido() implementado en todas las clases",
          "Método main que pruebe la jerarquía"
        ],
        "criterios": {
          "uso_correcto_extends": 20,
          "uso_super": 20,
          "diseño_jerarquia": 20,
          "funcionalidad": 20,
          "buenas_practicas": 20
        }
      },
      {
        "id": "D2",
        "nombre": "Implementación de Jerarquía de Vehículos",
        "peso": 20,
        "tipo": "ejercicio_codificacion",
        "duracion_minutos": 60,
        "jerarquia_requerida": {
          "Vehiculo": {
            "VehiculoTerrestre": ["Automovil", "Motocicleta"],
            "VehiculoAcuatico": ["Barco"]
          }
        },
        "requisitos_tecnicos": [
          "Jerarquía de mínimo 3 niveles",
          "Cada clase con atributos apropiados",
          "Constructores en cada nivel usando super()",
          "Métodos específicos de cada tipo",
          "Encapsulación correcta",
          "Programa de prueba funcional"
        ],
        "criterios": {
          "jerarquia_multinivel": 20,
          "constructores_encadenados": 20,
          "atributos_especificos": 20,
          "metodos_especificos": 20,
          "compilacion_ejecucion": 20
        }
      }
    ],
    "producto": [
      {
        "id": "P1",
        "nombre": "Proyecto Integrador - Sistema de Empleados",
        "peso": 30,
        "tipo": "proyecto",
        "modalidad": "individual_o_parejas",
        "tiempo_entrega_dias": 7,
        "descripcion": "Sistema de gestión de empleados con jerarquía de clases",
        "clases_requeridas": [
          "Empleado (clase base)",
          "EmpleadoTiempoCompleto",
          "EmpleadoTiempoParcial",
          "Contratista"
        ],
        "entregables": [
          {
            "nombre": "Código fuente",
            "archivos": ["*.java"],
            "descripcion": "Todas las clases implementadas y clase Main con pruebas"
          },
          {
            "nombre": "Diagrama UML",
            "archivos": ["diagrama-uml.png", "diagrama-uml.pdf"],
            "descripcion": "Diagrama de clases mostrando la jerarquía completa"
          },
          {
            "nombre": "Documentación",
            "archivos": ["README.md"],
            "descripcion": "Descripción del sistema, instrucciones de uso"
          }
        ],
        "criterios": {
          "diseño_jerarquia": {
            "peso": 26.67,
            "puntos": 8
          },
          "implementacion_tecnica": {
            "peso": 26.67,
            "puntos": 8
          },
          "diagrama_uml": {
            "peso": 16.67,
            "puntos": 5
          },
          "funcionalidad": {
            "peso": 13.33,
            "puntos": 4
          },
          "documentacion": {
            "peso": 10.0,
            "puntos": 3
          },
          "codigo_limpio": {
            "peso": 6.66,
            "puntos": 2
          }
        },
        "estructura_entrega": {
          "raiz": "apellido-nombre-semana04/",
          "carpetas": {
            "src": ["Empleado.java", "EmpleadoTiempoCompleto.java", "EmpleadoTiempoParcial.java", "Contratista.java", "Main.java"],
            "docs": ["diagrama-uml.png", "README.md"],
            "pruebas": ["capturas-ejecucion/"]
          }
        }
      }
    ]
  },
  "criterios_transversales": {
    "uso_correcto_herencia": {
      "excelente": "Usa herencia solo cuando es apropiado, diseña jerarquías lógicas, evita sobre-ingeniería",
      "bueno": "Usa herencia correctamente en la mayoría de casos",
      "suficiente": "Usa herencia básicamente, con algunas decisiones cuestionables",
      "insuficiente": "Usa herencia incorrectamente o no la usa cuando debería"
    },
    "encapsulacion_modificadores": {
      "excelente": "Usa private, protected, public apropiadamente según necesidades de herencia",
      "bueno": "Usa modificadores correctamente en la mayoría de casos",
      "suficiente": "Usa modificadores básicamente",
      "insuficiente": "No considera modificadores de acceso en herencia"
    },
    "constructores_super": {
      "excelente": "Constructores bien diseñados, uso perfecto de super(), manejo correcto de parámetros",
      "bueno": "Constructores correctos con uso adecuado de super()",
      "suficiente": "Constructores básicos con super() presente",
      "insuficiente": "Constructores incorrectos o sin super()"
    },
    "nomenclatura_convenciones": {
      "excelente": "Sigue todas las convenciones Java: PascalCase, camelCase, UPPER_CASE",
      "bueno": "Sigue convenciones con errores menores",
      "suficiente": "Sigue algunas convenciones",
      "insuficiente": "No sigue convenciones"
    }
  },
  "escala_calificacion": {
    "excelente": {
      "rango": [4.5, 5.0],
      "descripcion": "Domina completamente los conceptos de herencia"
    },
    "sobresaliente": {
      "rango": [4.0, 4.4],
      "descripcion": "Comprende y aplica herencia efectivamente"
    },
    "bueno": {
      "rango": [3.5, 3.9],
      "descripcion": "Comprende herencia con algunas limitaciones"
    },
    "suficiente": {
      "rango": [3.0, 3.4],
      "descripcion": "Comprensión básica de herencia"
    },
    "insuficiente": {
      "rango": [0.0, 2.9],
      "descripcion": "No alcanza competencias mínimas"
    }
  },
  "politicas": {
    "plagio": {
      "verificacion": true,
      "colaboracion_permitida": "Solo en ejercicios de clase",
      "uso_ia": "Debe ser declarado y explicado"
    },
    "entregas": {
      "ejercicios_clase": "Durante la sesión (4 horas)",
      "proyecto_final": "1 semana después de la sesión",
      "penalizacion_retraso": -0.5
    },
    "recuperacion": {
      "permitida": true,
      "nota_minima_para_recuperar": 3.0,
      "nota_maxima_recuperacion": 3.5,
      "tipo": "Nuevo proyecto integrador"
    }
  },
  "lista_verificacion_estudiante": {
    "codigo": [
      "Todas las clases compilan sin errores",
      "El programa ejecuta correctamente",
      "Uso correcto de extends en todas las subclases",
      "Uso de super() en todos los constructores de subclases",
      "Atributos encapsulados apropiadamente",
      "Métodos con nombres descriptivos",
      "Código comentado en partes complejas"
    ],
    "documentacion": [
      "Diagrama UML incluido y correcto",
      "README.md con descripción completa",
      "Instrucciones de compilación y ejecución",
      "Ejemplos de uso incluidos"
    ],
    "formato": [
      "Estructura de carpetas correcta",
      "Nombres de archivos según convenciones",
      "Sin archivos innecesarios (.class, .idea, etc.)"
    ]
  },
  "metadata": {
    "version": "1.0",
    "fecha_creacion": "2025-10-23",
    "revisado_por": "Equipo Pedagógico SENA",
    "ultima_actualizacion": "2025-10-23"
  }
}
