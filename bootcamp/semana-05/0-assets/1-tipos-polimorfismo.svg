<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1000 700">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 28px; font-weight: bold; fill: #e0e0e0; }
      .subtitle { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; fill: #b0b0b0; }
      .text { font-family: Arial, sans-serif; font-size: 14px; fill: #e0e0e0; }
      .small-text { font-family: Arial, sans-serif; font-size: 12px; fill: #34495e; }
      .code { font-family: 'Courier New', monospace; font-size: 11px; fill: #e0e0e0; }
      .bg-dark { fill: #1a1a1a; }
      .box-compile { fill: #1e3a8a; stroke: #3b82f6; stroke-width: 2; }
      .box-runtime { fill: #7f1d1d; stroke: #ef4444; stroke-width: 2; }
      .box-dynamic { fill: #14532d; stroke: #22c55e; stroke-width: 2; }
      .label-compile { fill: #3b82f6; }
      .label-runtime { fill: #ef4444; }
      .label-dynamic { fill: #22c55e; }
    </style>
  </defs>

  <!-- Fondo -->
  <rect width="1000" height="700" class="bg-dark"/>

  <!-- T√≠tulo principal -->
  <text x="500" y="50" text-anchor="middle" class="title">Tipos de Polimorfismo en Java</text>
  <text x="500" y="80" text-anchor="middle" class="text">üé≠ Una interfaz, m√∫ltiples implementaciones</text>

  <!-- Concepto Central -->
  <ellipse cx="500" cy="150" rx="200" ry="50" fill="#2d3748" stroke="#4a5568" stroke-width="3"/>
  <text x="500" y="145" text-anchor="middle" class="subtitle" fill="#e0e0e0">POLIMORFISMO</text>
  <text x="500" y="165" text-anchor="middle" class="text" font-size="12px">poly = muchas | morphos = formas</text>

  <!-- TIPO 1: Polimorfismo en Tiempo de Compilaci√≥n -->
  <g id="compile-time">
    <rect x="50" y="230" width="280" height="400" rx="10" class="box-compile"/>
    
    <text x="190" y="265" text-anchor="middle" class="subtitle label-compile">‚ö° Tiempo de Compilaci√≥n</text>
    <text x="190" y="290" text-anchor="middle" class="text" font-size="13px">(Compile-time Polymorphism)</text>
    
    <line x1="70" y1="300" x2="310" y2="300" stroke="#3b82f6" stroke-width="1"/>
    
    <text x="190" y="325" text-anchor="middle" class="subtitle" fill="white">SOBRECARGA</text>
    <text x="190" y="345" text-anchor="middle" class="text">(Method Overloading)</text>
    
    <rect x="70" y="360" width="240" height="180" rx="5" fill="#0f172a"/>
    <text x="80" y="385" class="code" fill="#3b82f6">class Calculadora {</text>
    <text x="100" y="405" class="code">int sumar(int a, int b) {</text>
    <text x="120" y="422" class="code">return a + b;</text>
    <text x="100" y="439" class="code">}</text>
    
    <text x="100" y="465" class="code">double sumar(double a, double b) {</text>
    <text x="120" y="482" class="code">return a + b;</text>
    <text x="100" y="499" class="code">}</text>
    
    <text x="100" y="525" class="code">int sumar(int a, int b, int c) {</text>
    <text x="120" y="542" class="code">return a + b + c;</text>
    <text x="100" y="559" class="code">}</text>
    <text x="80" y="576" class="code">}</text>
    
    <text x="70" y="605" class="text" font-size="12px">‚úì Mismo nombre</text>
    <text x="70" y="625" class="text" font-size="12px">‚úì Diferentes par√°metros</text>
  </g>

  <!-- TIPO 2: Polimorfismo en Tiempo de Ejecuci√≥n -->
  <g id="runtime">
    <rect x="360" y="230" width="280" height="400" rx="10" class="box-runtime"/>
    
    <text x="500" y="265" text-anchor="middle" class="subtitle label-runtime">üöÄ Tiempo de Ejecuci√≥n</text>
    <text x="500" y="290" text-anchor="middle" class="text" font-size="13px">(Runtime Polymorphism)</text>
    
    <line x1="380" y1="300" x2="620" y2="300" stroke="#ef4444" stroke-width="1"/>
    
    <text x="500" y="325" text-anchor="middle" class="subtitle" fill="white">SOBRESCRITURA</text>
    <text x="500" y="345" text-anchor="middle" class="text">(Method Overriding)</text>
    
    <rect x="380" y="360" width="240" height="180" rx="5" fill="#0f172a"/>
    <text x="390" y="385" class="code" fill="#ef4444">class Animal {</text>
    <text x="410" y="405" class="code">void hacerSonido() {</text>
    <text x="430" y="422" class="code">// sonido gen√©rico</text>
    <text x="410" y="439" class="code">}</text>
    <text x="390" y="456" class="code">}</text>
    
    <text x="390" y="480" class="code" fill="#ef4444">class Perro extends Animal {</text>
    <text x="410" y="500" class="code" fill="#22c55e">@Override</text>
    <text x="410" y="517" class="code">void hacerSonido() {</text>
    <text x="430" y="534" class="code">System.out.println("Guau");</text>
    <text x="410" y="551" class="code">}</text>
    <text x="390" y="568" class="code">}</text>
    
    <text x="380" y="605" class="text" font-size="12px">‚úì Mismo m√©todo</text>
    <text x="380" y="625" class="text" font-size="12px">‚úì Diferente implementaci√≥n</text>
  </g>

  <!-- TIPO 3: Polimorfismo Din√°mico -->
  <g id="dynamic">
    <rect x="670" y="230" width="280" height="400" rx="10" class="box-dynamic"/>
    
    <text x="810" y="265" text-anchor="middle" class="subtitle label-dynamic">üîÑ Polimorfismo Din√°mico</text>
    <text x="810" y="290" text-anchor="middle" class="text" font-size="13px">(Dynamic Binding)</text>
    
    <line x1="690" y1="300" x2="930" y2="300" stroke="#22c55e" stroke-width="1"/>
    
    <text x="810" y="325" text-anchor="middle" class="subtitle" fill="white">BINDING DIN√ÅMICO</text>
    <text x="810" y="345" text-anchor="middle" class="text">(Uso de referencias)</text>
    
    <rect x="690" y="360" width="240" height="220" rx="5" fill="#0f172a"/>
    <text x="700" y="385" class="code" fill="#22c55e">// Variable de superclase</text>
    <text x="700" y="405" class="code">Animal miAnimal;</text>
    
    <text x="700" y="430" class="code" fill="#22c55e">// Apunta a Perro</text>
    <text x="700" y="447" class="code">miAnimal = new Perro();</text>
    <text x="700" y="464" class="code">miAnimal.hacerSonido();</text>
    <text x="700" y="481" class="code" fill="#4a5568">// Imprime: "Guau"</text>
    
    <text x="700" y="510" class="code" fill="#22c55e">// Ahora apunta a Gato</text>
    <text x="700" y="527" class="code">miAnimal = new Gato();</text>
    <text x="700" y="544" class="code">miAnimal.hacerSonido();</text>
    <text x="700" y="561" class="code" fill="#4a5568">// Imprime: "Miau"</text>
    
    <text x="690" y="605" class="text" font-size="12px">‚úì Tipo decidido en runtime</text>
    <text x="690" y="625" class="text" font-size="12px">‚úì Flexibilidad m√°xima</text>
  </g>

  <!-- Comparaci√≥n inferior -->
  <rect x="50" y="650" width="900" height="35" rx="5" fill="#2d3748" stroke="#4a5568" stroke-width="2"/>
  <text x="70" y="673" class="text" font-size="12px" fill="#3b82f6">‚ö° Overloading = Misma clase</text>
  <text x="370" y="673" class="text" font-size="12px" fill="#ef4444">üöÄ Overriding = Herencia</text>
  <text x="670" y="673" class="text" font-size="12px" fill="#22c55e">üîÑ Dynamic = Referencias polim√≥rficas</text>

  <!-- Footer -->
  <text x="10" y="695" class="small-text">Bootcamp POO Java - SENA</text>
  <text x="990" y="695" text-anchor="end" class="small-text">Semana 05 - Polimorfismo</text>
</svg>
